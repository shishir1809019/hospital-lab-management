{"version":3,"file":"static/js/373.7f9fa349.chunk.js","mappings":"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","sources":["pages/apps/CultureOption/index.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  Table,\n  Dropdown,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// Define the records and column structure\nconst records = [\n  { id: 1, name: \"1\", option: \"Positive\" },\n  { id: 2, name: \"2\", option: \"Negative\" },\n  { id: 3, name: \"3\", option: \"Indeterminate\" },\n  { id: 4, name: \"4\", option: \"Susceptible\" },\n  { id: 5, name: \"5\", option: \"Resistant\" },\n  { id: 6, name: \"6\", option: \"Intermediate\" },\n  { id: 7, name: \"7\", option: \"Normal\" },\n  { id: 8, name: \"8\", option: \"Abnormal\" },\n  { id: 9, name: \"9\", option: \"High\" },\n  { id: 10, name: \"10\", option: \"Low\" },\n  { id: 11, name: \"11\", option: \"Elevated\" },\n  { id: 12, name: \"12\", option: \"Not Elevated\" },\n];\n\nconst columns = [\n  { Header: \"Name\", accessor: \"name\" },\n  { Header: \"Option\", accessor: \"option\" },\n  { Header: \"Action\", accessor: \"action\" },\n];\n\nconst CultureOption = () => {\n  return (\n    <>\n      <Row>\n        <Col xs={12}>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Lab Culture</h4>\n            <div className=\"page-title-right\">\n              <Link to=\"add\" className=\"btn btn-primary mb-2 mb-sm-0\">\n                <i className=\"uil-plus me-1\"></i> Create Culture Option\n              </Link>\n            </div>\n          </div>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-3 mt-2\">\n        <Card>\n          <Card.Body>\n            <div className=\"table-responsive\">\n              <Table className=\"table mb-0\">\n                <thead>\n                  <tr>\n                    {columns.map((column) => (\n                      <th key={column.accessor}>{column.Header}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {records.map((record, index) => (\n                    <tr key={index}>\n                      <td>{record.name}</td>\n                      <td>{record.option}</td>\n                      <td>\n                        <div>\n                          <Dropdown\n                            as={ButtonGroup}\n                            className=\"mt-2 me-1\"\n                            align=\"end\"\n                          >\n                            <Dropdown.Toggle\n                              variant=\"primary\"\n                              className=\"cursor-pointer\"\n                            >\n                              <i className=\"bi bi-gear\"></i>\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                              <Dropdown.Item href=\"#\">\n                                <i className=\"bi bi-pencil-square\"></i> Edit\n                              </Dropdown.Item>\n\n                              <Dropdown.Item href=\"#\">\n                                <i className=\"bi bi-trash-fill\"></i> Delete\n                              </Dropdown.Item>\n                            </Dropdown.Menu>\n                          </Dropdown>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </div>\n          </Card.Body>\n        </Card>\n      </Row>\n    </>\n  );\n};\n\nexport default CultureOption;\n"],"names":["records","id","name","option","columns","Header","accessor","_jsxs","_Fragment","children","_jsx","Row","Col","xs","className","Link","to","Card","Table","map","column","record","index","Dropdown","as","ButtonGroup","align","variant","href"],"sourceRoot":""}