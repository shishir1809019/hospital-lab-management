{"version":3,"file":"static/js/504.aeb09400.chunk.js","mappings":"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","sources":["components/Scrollbar.tsx","components/VerticalForm.tsx","components/FormInput.tsx","components/Datepicker.tsx","components/MembersList.tsx","components/Tasks.tsx","components/ChatList.tsx","components/StatisticsChartWidget.tsx","pages/dashboard/Ecommerce/Statistics.tsx","components/OverViewItem.tsx","pages/dashboard/Ecommerce/OverView.tsx","pages/dashboard/Ecommerce/RevenueChart.tsx","pages/dashboard/Ecommerce/TargetChart.tsx","pages/dashboard/Ecommerce/SalesChart.tsx","pages/dashboard/Ecommerce/Orders.tsx","pages/dashboard/Ecommerce/data.ts","pages/dashboard/Ecommerce/index.tsx"],"sourcesContent":["import React from \"react\";\nimport SimpleBar from \"simplebar-react\";\n\ninterface ScrollbarProps extends SimpleBar.Props {\n  className?: string;\n  style?: any;\n  children?: any;\n}\n\nconst Scrollbar = ({\n  className,\n  style,\n  children,\n  ...otherProps\n}: ScrollbarProps) => {\n  return (\n    <SimpleBar className={className} style={style} {...otherProps}>\n      {children}\n    </SimpleBar>\n  );\n};\n\nexport default Scrollbar;\n","import React from \"react\";\nimport { useForm, Resolver, SubmitHandler } from \"react-hook-form\";\n\ninterface VerticalFromProps<TFormValues> {\n  defaultValues?: any;\n  resolver?: any;\n  children?: any;\n  onSubmit: any;\n  formClass?: string;\n}\n\nconst VerticalForm = <\n  TFormValues extends Record<string, any> = Record<string, any>\n>({\n  defaultValues,\n  resolver,\n  children,\n  onSubmit,\n  formClass,\n}: VerticalFromProps<TFormValues>) => {\n  /*\n   * form methods\n   */\n  const methods = useForm<TFormValues>({ defaultValues, resolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n  } = methods;\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n      {Array.isArray(children)\n        ? children.map((child) => {\n            return child.props && child.props.name\n              ? React.createElement(child.type, {\n                  ...{\n                    ...child.props,\n                    register,\n                    key: child.props.name,\n                    errors,\n                    control,\n                  },\n                })\n              : child;\n          })\n        : children}\n    </form>\n  );\n};\n\nexport default VerticalForm;\n","import React, { InputHTMLAttributes } from \"react\";\nimport { Form, InputGroup } from \"react-bootstrap\";\n\nimport { FieldErrors, Control } from \"react-hook-form\";\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  startIcon?: any;\n  label?: string;\n  type?: string;\n  name: string;\n  comp?: string;\n  placeholder?: string;\n  register?: any;\n  errors?: FieldErrors;\n  control?: Control<any>;\n  className?: string;\n  labelClassName?: string;\n  containerClass?: string;\n  textClassName?: string;\n  refCallback?: any;\n  action?: any;\n  rows?: string | number;\n}\n\n// textual form-controls—like inputs, passwords, textareas etc.\nconst TextualInput = ({\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Control\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        as={comp}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        rows={rows}\n        {...otherProps}\n      ></Form.Control>\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// non-textual checkbox and radio controls\nconst CheckInput = ({\n  type,\n  label,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Check\n        type={type}\n        label={label}\n        name={name}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        {...otherProps}\n      />\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// handle select controls\nconst SelectInput = ({\n  type,\n  label,\n  name,\n  placeholder,\n  register,\n  errors,\n  comp,\n  rows,\n  className,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <>\n      <Form.Select\n        type={type}\n        label={label}\n        name={name}\n        id={name}\n        ref={(r: HTMLInputElement) => {\n          if (refCallback) refCallback(r);\n        }}\n        className={className}\n        isInvalid={errors && errors[name] ? true : false}\n        {...(register ? register(name) : {})}\n        {...otherProps}\n      />\n\n      {errors && errors[name] ? (\n        <Form.Control.Feedback type=\"invalid\">\n          {errors[name][\"message\"]}\n        </Form.Control.Feedback>\n      ) : null}\n    </>\n  );\n};\n\n// extend textual form-controls with add-ons\nconst FormInputGroup = ({\n  startIcon,\n  type,\n  name,\n  placeholder,\n  comp,\n  register,\n  errors,\n  rows,\n  className,\n  textClassName,\n  refCallback,\n  ...otherProps\n}: FormInputProps) => {\n  return (\n    <InputGroup>\n      <InputGroup.Text className={textClassName}>{startIcon}</InputGroup.Text>\n      {type === \"select\" ? (\n        <SelectInput\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          refCallback={refCallback}\n          comp={comp}\n          errors={errors}\n          register={register}\n          className={className}\n          rows={rows}\n          {...otherProps}\n        />\n      ) : (\n        <TextualInput\n          type={type}\n          name={name}\n          placeholder={placeholder}\n          refCallback={refCallback}\n          comp={comp}\n          errors={errors}\n          register={register}\n          className={className}\n          rows={rows}\n          {...otherProps}\n        />\n      )}\n    </InputGroup>\n  );\n};\n\nconst FormInput = ({\n  startIcon,\n  label,\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  control,\n  className,\n  labelClassName,\n  containerClass,\n  textClassName,\n  refCallback,\n  action,\n  rows,\n  ...otherProps\n}: FormInputProps) => {\n  // handle input type\n  const comp =\n    type === \"textarea\" ? \"textarea\" : type === \"select\" ? \"select\" : \"input\";\n\n  return (\n    <>\n      {type === \"hidden\" ? (\n        <input\n          type={type}\n          name={name}\n          {...(register ? register(name) : {})}\n          {...otherProps}\n        />\n      ) : (\n        <>\n          {type === \"checkbox\" || type === \"radio\" ? (\n            <Form.Group className={containerClass}>\n              <CheckInput\n                type={type}\n                label={label}\n                name={name}\n                placeholder={placeholder}\n                refCallback={refCallback}\n                errors={errors}\n                register={register}\n                comp={comp}\n                className={className}\n                rows={rows}\n                {...otherProps}\n              />\n            </Form.Group>\n          ) : type === \"select\" ? (\n            <Form.Group className={containerClass}>\n              {label ? (\n                <>\n                  <Form.Label className={labelClassName}>{label}</Form.Label>\n                  {action && action}\n                </>\n              ) : null}\n              {startIcon ? (\n                <FormInputGroup\n                  type={type}\n                  startIcon={startIcon}\n                  name={name}\n                  comp={comp}\n                  textClassName={textClassName}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              ) : (\n                <SelectInput\n                  type={type}\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  comp={comp}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              )}\n            </Form.Group>\n          ) : (\n            <Form.Group className={containerClass}>\n              {label ? (\n                <>\n                  <Form.Label className={labelClassName}>{label}</Form.Label>\n                  {action && action}\n                </>\n              ) : null}\n              {startIcon ? (\n                <FormInputGroup\n                  type={type}\n                  startIcon={startIcon}\n                  name={name}\n                  comp={comp}\n                  textClassName={textClassName}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              ) : (\n                <TextualInput\n                  type={type}\n                  name={name}\n                  placeholder={placeholder}\n                  refCallback={refCallback}\n                  errors={errors}\n                  register={register}\n                  comp={comp}\n                  className={className}\n                  rows={rows}\n                  {...otherProps}\n                />\n              )}\n            </Form.Group>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormInput;\n","import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface ShreyuDatepickerProps {\n  value?: Date;\n  selectsRange?: boolean;\n  startDate?: Date;\n  endDate?: Date;\n  calendarClassName?: string;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst ShreyuDatepicker = (props: ShreyuDatepickerProps) => {\n  // handle custom input\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput inputClass={props.inputClass!} />\n    ) : (\n      <DatepickerInputWithAddon inputClass={props.inputClass!} />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        calendarClassName={props.calendarClassName || \"shadow\"}\n        selectsRange={props.selectsRange}\n        startDate={props.startDate}\n        endDate={props.endDate}\n        selected={props.value}\n        onChange={(date) => props.onChange(date)}\n        customInput={input}\n        timeIntervals={props.tI}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default ShreyuDatepicker;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\n\nexport interface MembersTypes {\n  id: number;\n  name: string;\n  avatar: string;\n  designation: string;\n}\n\ninterface MembersListProps {\n  title: string;\n  members: MembersTypes[];\n}\n\nconst MembersList = ({ title, members }: MembersListProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <h6 className=\"header-title mb-3\">{title}</h6>\n\n        {(members || []).map((item, index) => {\n          return (\n            <div key={index} className=\"d-flex mt-1 border-top pt-2\">\n              <img src={item.avatar} className=\"avatar rounded me-3\" alt=\"\" />\n              <div className=\"flex-grow-1\">\n                <h5 className=\"mt-1 mb-0 fs-15\">{item.name}</h5>\n                <h6 className=\"text-muted fw-normal mt-1 mb-2\">\n                  {item.designation}\n                </h6>\n              </div>\n\n              <Dropdown className=\"align-self-center float-end\" align=\"end\">\n                <Dropdown.Toggle\n                  as=\"a\"\n                  className=\"cursor-pointer arrow-none text-muted\"\n                >\n                  <i className=\"uil uil-ellipsis-v\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item>\n                    <i className=\"uil uil-edit-alt me-2\"></i>Edit\n                  </Dropdown.Item>\n                  <Dropdown.Item>\n                    <i className=\"uil uil-exit me-2\"></i>Remove from Team\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item className=\"text-danger\">\n                    <i className=\"uil uil-trash me-2\"></i>Delete\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MembersList;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// components\nimport Scrollbar from \"./Scrollbar\";\n\nexport interface TaskItemTypes {\n  id: number;\n  title: string;\n  dueDate: string;\n}\n\ninterface TasksProps {\n  tasks: TaskItemTypes[];\n}\n\nconst Tasks = ({ tasks }: TasksProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Link to=\"#\" className=\"btn btn-primary btn-sm float-end\">\n          View All\n        </Link>\n        <h5 className=\"mb-4 header-title\">Tasks</h5>\n\n        <Scrollbar style={{ maxHeight: \"352px\" }} className=\"px-1\">\n          {(tasks || []).map((item, index) => {\n            return (\n              <div key={index} className=\"mt-2\">\n                <div className=\"form-check\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"task1\"\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"task1\">\n                    {item.title}\n                  </label>\n                  <p className=\"fs-13 text-muted\">Due on {item.dueDate}</p>\n                </div>\n              </div>\n            );\n          })}\n        </Scrollbar>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Tasks;\n","import React, { useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Card, Dropdown, Row, Col } from \"react-bootstrap\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n//components\nimport { FormInput } from \"../components/\";\nimport Scrollbar from \"../components/Scrollbar\";\n\n// images\nimport profilePic from \"../assets/images/users/avatar-1.jpg\";\n\n/* Chat Item Avatar */\nconst ChatItemAvatar = ({\n  userAvatar,\n  postedOn,\n}: {\n  userAvatar: string;\n  postedOn: string;\n}) => {\n  return (\n    <>\n      <div className=\"chat-avatar\">\n        <img src={userAvatar} alt={userAvatar} />\n        <i>{postedOn}</i>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item Text */\nconst ChatItemText = ({\n  userName,\n  text,\n}: {\n  userName: string;\n  text: string;\n}) => {\n  return (\n    <>\n      <div className=\"conversation-text\">\n        <div className=\"ctext-wrap\">\n          <i>{userName}</i>\n          <p>{text}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item */\nconst chatItemDefaultProps = {\n  placement: \"\",\n  children: PropTypes.object,\n  className: \"\",\n};\n\nconst ChatItem = ({\n  children,\n  placement,\n  className,\n}: {\n  children: any;\n  placement: string;\n  className: string;\n}) => {\n  return (\n    <li\n      className={classNames(\n        \"clearfix\",\n        { odd: placement === \"left\" },\n        className\n      )}\n    >\n      {children}\n    </li>\n  );\n};\n\nChatItem.defaultProps = chatItemDefaultProps;\n\n/**\n * ChatForm\n */\n\ninterface FormValues {\n  newMessage: string;\n}\n\n/**\n * Renders the ChatForm\n */\nconst ChatForm = ({\n  onNewMessagesPosted,\n}: {\n  onNewMessagesPosted: (message: string) => void;\n}) => {\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newMessage: yup.string().required(\"Please enter your messsage\"),\n    })\n  );\n\n  const methods = useForm<FormValues>({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * Handle valid form submission\n   */\n  const handleValidMessageSubmit: SubmitHandler<FormValues> = (values) => {\n    const message = values[\"newMessage\"];\n    onNewMessagesPosted(message);\n    reset();\n  };\n\n  return (\n    <>\n      <form\n        name=\"chat-form\"\n        id=\"chat-form\"\n        onSubmit={handleSubmit(handleValidMessageSubmit)}\n      >\n        <Row>\n          <Col>\n            <FormInput\n              type=\"text\"\n              name=\"newMessage\"\n              className=\"form-control chat-input\"\n              placeholder=\"Enter your text\"\n              register={register}\n              key=\"newMessage\"\n              errors={errors}\n              control={control}\n            />\n          </Col>\n          <Col className=\"col-auto\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger chat-send w-100 waves-effect waves-light\"\n            >\n              Send\n            </button>\n          </Col>\n        </Row>\n      </form>\n    </>\n  );\n};\n\n/**\n * ChatList\n */\nexport interface MessageItemTypes {\n  id: number;\n  userPic?: string;\n  userName: string;\n  text: string;\n  postedOn: string;\n}\n\ninterface ChatListProps {\n  title?: string;\n  className?: string;\n  messages: Array<MessageItemTypes>;\n}\n\n/**\n * Renders the ChatList\n */\nconst ChatList = (props: ChatListProps) => {\n  const [messages, setMessages] = useState<Array<MessageItemTypes>>(\n    props.messages\n  );\n\n  /**\n   * Handle new message posted\n   */\n  const handleNewMessagePosted = (message: string) => {\n    // save new message\n    setMessages(\n      messages.concat({\n        id: messages.length + 1,\n        userPic: profilePic,\n        userName: \"Dominic\",\n        text: message,\n        postedOn: new Date().getHours() + \":\" + new Date().getMinutes(),\n      })\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"cursor-pointer arrow-none text-muted\"\n            >\n              <i className=\"uil uil-ellipsis-v\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"uil uil-refresh me-2\"></i>Refresh\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"uil uil-user-plus me-2\"></i>Add New\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"text-danger\">\n                <i className=\"uil uil-exit me-2\"></i>Exit\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h4 className=\"header-title mb-4\">{props.title}</h4>\n\n          <div className=\"chat-conversation\">\n            {/* chat messages */}\n            <Scrollbar style={{ maxHeight: \"314px\", width: \"100%\" }}>\n              <ul className={classNames(\"conversation-list\", props.className)}>\n                {(messages || []).map((message, i) => {\n                  return (\n                    <ChatItem\n                      key={i}\n                      placement={\n                        message.userName === \"Dominic\" ? \"left\" : \"right\"\n                      }\n                    >\n                      {message.userPic && (\n                        <ChatItemAvatar\n                          userAvatar={message.userPic}\n                          postedOn={message.postedOn}\n                        />\n                      )}\n                      <ChatItemText\n                        userName={message.userName}\n                        text={message.text}\n                      />\n                    </ChatItem>\n                  );\n                })}\n              </ul>\n            </Scrollbar>\n\n            {/* chat form */}\n            <ChatForm onNewMessagesPosted={handleNewMessagePosted} />\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatList;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\nimport classNames from \"classnames\";\n\ninterface StatisticsChartWidgetProps {\n  title?: string;\n  stats?: string;\n  trend: {\n    textClass: string;\n    icon: string;\n    value: string;\n  };\n  colors?: Array<string>;\n}\n\nconst StatisticsChartWidget = ({\n  title,\n  stats,\n  trend,\n  colors,\n}: StatisticsChartWidgetProps) => {\n  //  default options\n  const options: ApexOptions = {\n    chart: {\n      type: \"area\",\n      sparkline: {\n        enabled: true,\n      },\n    },\n    stroke: {\n      width: 2,\n      curve: \"smooth\",\n    },\n    markers: {\n      size: 0,\n    },\n    colors: colors,\n    tooltip: {\n      theme: \"dark\",\n      fixed: {\n        enabled: false,\n      },\n      x: {\n        show: false,\n      },\n      y: {\n        title: {\n          formatter: (seriesName) => {\n            return \"\";\n          },\n        },\n      },\n      marker: {\n        show: false,\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"vertical\",\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [45, 100],\n      },\n    },\n  };\n\n  // chart data\n  const series = [\n    {\n      data: [25, 66, 41, 85, 63, 25, 44, 12, 36, 9, 54],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"d-flex\">\n          <div className=\"flex-grow-1\">\n            <span className=\"text-muted text-uppercase fs-12 fw-bold\">\n              {title}\n            </span>\n            <h3 className=\"mb-0\">{stats}</h3>\n          </div>\n          <div className=\"align-self-center flex-shrink-0\">\n            <Chart\n              className=\"apex-charts\"\n              options={options}\n              series={series}\n              type=\"area\"\n              height={45}\n              width={80}\n            />\n            <span className={classNames(\"fw-bold\", \"fs-13\", trend.textClass)}>\n              <i className={trend.icon}></i> {trend.value}\n            </span>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StatisticsChartWidget;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport StatisticsChartWidget from \"../../../components/StatisticsChartWidget\";\n\nconst Statistics = () => {\n  return (\n    <div>\n      <Row>\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"Today Revenue\"\n            stats=\"$2100\"\n            trend={{\n              textClass: \"text-success\",\n              icon: \"uil uil-arrow-up\",\n              value: \"10.21%\",\n            }}\n            colors={[\"#727cf5\"]}\n          />\n        </Col>\n\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"Product Sold\"\n            stats=\"558\"\n            trend={{\n              textClass: \"text-danger\",\n              icon: \"uil uil-arrow-down\",\n              value: \"5.05%\",\n            }}\n            colors={[\"#f77e53\"]}\n          />\n        </Col>\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"New Customers\"\n            stats=\"65\"\n            trend={{\n              textClass: \"text-success\",\n              icon: \"uil uil-arrow-up\",\n              value: \"21.16%\",\n            }}\n            colors={[\"#43d39e\"]}\n          />\n        </Col>\n\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"New Visitors\"\n            stats=\"958\"\n            trend={{\n              textClass: \"text-danger\",\n              icon: \"uil uil-arrow-down\",\n              value: \"5.05%\",\n            }}\n            colors={[\"#ffbe0b\"]}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport FeatherIcon from \"feather-icons-react\";\nimport classNames from \"classnames\";\n\ninterface OverViewItemProps {\n  stats: string;\n  title: string;\n  icon: string;\n  iconClass?: string;\n}\n\nconst OverViewItem = ({ stats, title, icon, iconClass }: OverViewItemProps) => {\n  return (\n    <div className=\"d-flex p-3 border-bottom\">\n      <div className=\"flex-grow-1\">\n        <h4 className=\"mt-0 mb-1 fs-22\">{stats}</h4>\n        <span className=\"text-muted\">{title}</span>\n      </div>\n      <FeatherIcon\n        icon={icon}\n        className={classNames(\"align-self-center\", \"icon-dual\", iconClass)}\n      />\n    </div>\n  );\n};\n\nexport default OverViewItem;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Dropdown } from \"react-bootstrap\";\n\n// components\nimport OverViewItem from \"../../../components/OverViewItem\";\n\nconst OverView = () => {\n  return (\n    <Card>\n      <Card.Body className=\"p-0\">\n        <div className=\"p-3\">\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"arrow-none text-muted cursor-pointer\"\n            >\n              <i className=\"uil uil-ellipsis-v\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"uil uil-refresh me-2\"></i>Refresh\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"uil uil-user-plus me-2\"></i>Add New\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"text-danger\">\n                <i className=\"uil uil-exit me-2\"></i>Exit\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <h5 className=\"card-title header-title mb-0\">Overview</h5>\n        </div>\n\n        <OverViewItem\n          stats={\"121,000\"}\n          title={\"Total Visitors\"}\n          icon={\"users\"}\n          iconClass={\"icon-md\"}\n        />\n        <OverViewItem\n          stats={\"21,000\"}\n          title={\"Total Product Views\"}\n          icon={\"image\"}\n          iconClass={\"icon-md\"}\n        />\n        <OverViewItem\n          stats={\"$21.5\"}\n          title={\"Revenue Per Visitor\"}\n          icon={\"shopping-bag\"}\n          iconClass={\"icon-md\"}\n        />\n\n        <Link to=\"#\" className=\"p-2 d-block text-end\">\n          View All <i className=\"uil-arrow-right\"></i>\n        </Link>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default OverView;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\nconst RevenueChart = () => {\n  function getDaysInMonth(month: any, year: any) {\n    var date = new Date(year, month, 1);\n    var days = [];\n    var idx = 0;\n    while (date.getMonth() === month && idx < 15) {\n      var d = new Date(date);\n      days.push(\n        d.getDate() + \" \" + d.toLocaleString(\"en-us\", { month: \"short\" })\n      );\n      date.setDate(date.getDate() + 1);\n      idx += 1;\n    }\n    return days;\n  }\n\n  const now = new Date();\n  const labels = getDaysInMonth(now.getMonth(), now.getFullYear());\n\n  const apexBarChartOpts: ApexOptions = {\n    chart: {\n      height: 329,\n      type: \"area\",\n      toolbar: {\n        show: false,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    tooltip: {\n      theme: \"dark\",\n      x: {\n        show: false,\n      },\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 4,\n    },\n    series: [\n      {\n        name: \"Revenue\",\n        data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35],\n      },\n    ],\n    legend: {\n      show: false,\n    },\n    colors: [\"#43d39e\"],\n    xaxis: {\n      type: \"category\",\n      categories: labels,\n      tooltip: {\n        enabled: false,\n      },\n      axisBorder: {\n        show: false,\n      },\n      labels: {},\n    },\n    yaxis: {\n      labels: {\n        formatter: (val: number) => {\n          return val + \"k\";\n        },\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"vertical\",\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [45, 100],\n      },\n    },\n  };\n\n  const apexBarChartData = [\n    {\n      name: \"Revenue\",\n      data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle\n            as=\"a\"\n            className=\"arrow-none text-muted cursor-pointer\"\n          >\n            <i className=\"uil uil-ellipsis-v\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Today</Dropdown.Item>\n            <Dropdown.Item>7 Days</Dropdown.Item>\n            <Dropdown.Item>15 Days</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item>1 Months</Dropdown.Item>\n            <Dropdown.Item>6 Months</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item>1 Year</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h5 className=\"card-title mb-0 header-title\">Revenue</h5>\n\n        <Chart\n          options={apexBarChartOpts}\n          series={apexBarChartData}\n          type=\"area\"\n          className=\"apex-charts mt-3\"\n          height={329}\n          dir=\"ltr\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RevenueChart;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\nconst TargetChart = () => {\n  const apexBarChartOpts: ApexOptions = {\n    chart: {\n      height: 349,\n      type: \"bar\",\n      stacked: true,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"45%\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: [\"transparent\"],\n    },\n    xaxis: {\n      categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n      axisBorder: {\n        show: false,\n      },\n    },\n    legend: {\n      show: false,\n    },\n    grid: {\n      row: {\n        colors: [\"transparent\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.2,\n      },\n      borderColor: \"#f3f4f7\",\n    },\n    tooltip: {\n      theme: \"dark\",\n      x: {\n        show: false,\n      },\n      y: {\n        formatter: function (val) {\n          return \"$ \" + val + \" thousands\";\n        },\n      },\n    },\n  };\n\n  const apexBarChartData = [\n    {\n      name: \"Net Profit\",\n      data: [35, 44, 55, 57, 56, 61],\n    },\n    {\n      name: \"Revenue\",\n      data: [52, 76, 85, 101, 98, 87],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body className=\"pb-0\">\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle\n            as=\"a\"\n            className=\"cursor-pointer arrow-none text-muted\"\n          >\n            <i className=\"uil uil-ellipsis-v\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>\n              <i className=\"uil uil-refresh me-2\"></i>Refresh\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <i className=\"uil uil-user-plus me-2\"></i>Add New\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item className=\"text-danger\">\n              <i className=\"uil uil-exit me-2\"></i>Exit\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h5 className=\"card-title header-title\">Targets</h5>\n\n        <Chart\n          options={apexBarChartOpts}\n          series={apexBarChartData}\n          type=\"bar\"\n          className=\"apex-charts mt-3\"\n          height={349}\n          dir=\"ltr\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TargetChart;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\nconst SalesChart = () => {\n  const apexBarChartOpts: ApexOptions = {\n    plotOptions: {\n      pie: {\n        donut: {\n          size: \"70%\",\n          labels: {\n            show: false,\n            name: {\n              show: true,\n              fontSize: \"22px\",\n              fontFamily: \"Helvetica, Arial, sans-serif\",\n              fontWeight: 600,\n              color: undefined,\n              offsetY: -10,\n              formatter: function (val) {\n                return val;\n              },\n            },\n          },\n        },\n        expandOnClick: false,\n      },\n    },\n    chart: {\n      height: 291,\n      type: \"donut\",\n    },\n    legend: {\n      show: true,\n      position: \"right\",\n      horizontalAlign: \"left\",\n      itemMargin: {\n        horizontal: 6,\n        vertical: 3,\n      },\n    },\n    labels: [\"Clothes 44k\", \"Smartphons 55k\", \"Electronics 41k\", \"Other 17k\"],\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n    tooltip: {\n      y: {\n        formatter: (value: number) => {\n          return value + \"k\";\n        },\n      },\n    },\n  };\n\n  const apexBarChartData = [44, 55, 41, 17];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle\n            as=\"a\"\n            className=\"arrow-none text-muted cursor-pointer\"\n          >\n            <i className=\"uil uil-ellipsis-v\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>\n              <i className=\"uil uil-refresh me-2\"></i>Refresh\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <i className=\"uil uil-user-plus me-2\"></i>Add New\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item className=\"text-danger\">\n              <i className=\"uil uil-exit me-2\"></i>Exit\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h5 className=\"card-title mt-0 mb-0 header-title\">Sales By Category</h5>\n\n        <Chart\n          options={apexBarChartOpts}\n          series={apexBarChartData}\n          type=\"donut\"\n          className=\"apex-charts mb-0 mt-4\"\n          height={291}\n          dir=\"ltr\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SalesChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// types\nimport { OrdersItemTypes } from \"./data\";\n\ninterface OrdersProps {\n  orderDetails: OrdersItemTypes[];\n}\n\nconst Orders = ({ orderDetails }: OrdersProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Link to=\"#\" className=\"btn btn-primary btn-sm float-end\">\n          <i className=\"uil uil-export me-1\"></i> Export\n        </Link>\n        <h5 className=\"card-title mt-0 mb-0 header-title\">Recent Orders</h5>\n\n        <div className=\"table-responsive mt-4\">\n          <table className=\"table table-hover table-nowrap mb-0\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Product</th>\n                <th scope=\"col\">Customer</th>\n                <th scope=\"col\">Price</th>\n                <th scope=\"col\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {(orderDetails || []).map((item, index) => {\n                return (\n                  <tr key={index}>\n                    <td>#{item.id}</td>\n                    <td>{item.product}</td>\n                    <td>{item.customer}</td>\n                    <td>{item.price}</td>\n                    <td>\n                      <span\n                        className={classNames(\"badge\", \"py-1\", {\n                          \"badge-soft-warning\": item.status === \"Pending\",\n                          \"badge-soft-success\": item.status === \"Delivered\",\n                          \"badge-soft-danger\": item.status === \"Declined\",\n                        })}\n                      >\n                        {item.status}\n                      </span>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Orders;\n","// images\nimport avatar1 from \"../../../assets/images/users/avatar-7.jpg\";\nimport avatar2 from \"../../../assets/images/users/avatar-9.jpg\";\nimport avatar3 from \"../../../assets/images/users/avatar-4.jpg\";\nimport avatar4 from \"../../../assets/images/users/avatar-1.jpg\";\nimport avatar5 from \"../../../assets/images/users/avatar-8.jpg\";\nimport profilePic2 from \"../../../assets/images/users/avatar-5.jpg\";\n\n// types\nimport { MembersTypes } from \"../../../components/MembersList\";\nimport { TaskItemTypes } from \"../../../components/Tasks\";\nimport { MessageItemTypes } from \"../../../components/ChatList\";\n\nexport interface OrdersItemTypes {\n  id: number;\n  product: string;\n  customer: string;\n  price: string;\n  status: string;\n}\n\nconst orderDetails: OrdersItemTypes[] = [\n  {\n    id: 98754,\n    product: \"ASOS Ridley High\",\n    customer: \"Otto B\",\n    price: \"$79.49\",\n    status: \"Pending\",\n  },\n  {\n    id: 98753,\n    product: \"Marco Lightweight Shirt\",\n    customer: \"Mark P\",\n    price: \"$125.49\",\n    status: \"Delivered\",\n  },\n  {\n    id: 98752,\n    product: \"Half Sleeve Shirt\",\n    customer: \"Dave B\",\n    price: \"$35.49\",\n    status: \"Declined\",\n  },\n  {\n    id: 98751,\n    product: \"Lightweight Jacket\",\n    customer: \"Shreyu N\",\n    price: \"$49.49\",\n    status: \"Delivered\",\n  },\n  {\n    id: 98750,\n    product: \"Marco Shoes\",\n    customer: \"Rik N\",\n    price: \"$69.49\",\n    status: \"Declined\",\n  },\n];\n\nconst topPerformers: MembersTypes[] = [\n  {\n    id: 1,\n    name: \"Shreyu N\",\n    avatar: avatar1,\n    designation: \"Senior Sales Guy\",\n  },\n  {\n    id: 2,\n    name: \"Greeva Y\",\n    avatar: avatar2,\n    designation: \"Social Media Campaign\",\n  },\n  {\n    id: 3,\n    name: \"Nik G\",\n    avatar: avatar3,\n    designation: \"Inventory Manager\",\n  },\n  {\n    id: 4,\n    name: \"Hardik G\",\n    avatar: avatar4,\n    designation: \"Sales Person\",\n  },\n  {\n    id: 5,\n    name: \"GB Patel G\",\n    avatar: avatar5,\n    designation: \"Sales Person\",\n  },\n];\n\nconst tasks: TaskItemTypes[] = [\n  {\n    id: 1,\n    title: \"Draft the new contract document for sales team\",\n    dueDate: \"24 Aug, 2019\",\n  },\n  {\n    id: 2,\n    title: \"iOS App home page\",\n    dueDate: \"23 Aug, 2019\",\n  },\n  {\n    id: 3,\n    title: \"Write a release note for Shreyu\",\n    dueDate: \"22 Aug, 2019\",\n  },\n  {\n    id: 4,\n    title: \"Invite Greeva to a project shreyu admin\",\n    dueDate: \"21 Aug, 2019\",\n  },\n  {\n    id: 5,\n    title: \"Enable analytics tracking for main website\",\n    dueDate: \"20 Aug, 2019\",\n  },\n  {\n    id: 6,\n    title: \"Invite user to a project\",\n    dueDate: \"18 Aug, 2019\",\n  },\n  {\n    id: 7,\n    title: \"Write a release note\",\n    dueDate: \"18 Aug, 2019\",\n  },\n];\nconst chatMessages: MessageItemTypes[] = [\n  {\n    id: 1,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Hello!\",\n    postedOn: \"10:00\",\n  },\n  {\n    id: 2,\n    userPic: avatar4,\n    userName: \"Dominic\",\n    text: \"Hi, How are you? What about our next meeting?\",\n    postedOn: \"10:01\",\n  },\n  {\n    id: 3,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Yeah everything is fine\",\n    postedOn: \"10:02\",\n  },\n  {\n    id: 4,\n    userPic: avatar4,\n    userName: \"Dominic\",\n    text: \"Wow that's great!\",\n    postedOn: \"10:03\",\n  },\n  {\n    id: 5,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Cool!\",\n    postedOn: \"10:03\",\n  },\n];\n\nexport { orderDetails, topPerformers, tasks, chatMessages };\n","import React, { useState } from \"react\";\nimport { Row, Col, Dropdown, ButtonGroup } from \"react-bootstrap\";\nimport FeatherIcon from \"feather-icons-react\";\n\n// components\nimport ShreyuDatepicker from \"../../../components/Datepicker\";\nimport MembersList from \"../../../components/MembersList\";\nimport Tasks from \"../../../components/Tasks\";\nimport ChatList from \"../../../components/ChatList\";\n\nimport Statistics from \"./Statistics\";\nimport OverView from \"./OverView\";\nimport RevenueChart from \"./RevenueChart\";\nimport TargetChart from \"./TargetChart\";\nimport SalesChart from \"./SalesChart\";\nimport Orders from \"./Orders\";\n\n// dummy data\nimport { orderDetails, topPerformers, tasks, chatMessages } from \"./data\";\n\nconst EcommerceDashboard = () => {\n  const [dateRange, setDateRange] = useState<any>([\n    new Date(),\n    new Date().setDate(new Date().getDate() + 7),\n  ]);\n  const [startDate, endDate] = dateRange;\n\n  /*\n   * handle date change\n   */\n  const onDateChange = (date: Date) => {\n    if (date) {\n      setDateRange(date);\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Dashboard</h4>\n            <div className=\"page-title-right\">\n              <form className=\"float-md-end mt-3 mt-md-0\">\n                <Row className=\"g-2\">\n                  <Col md={\"auto\"}>\n                    <div className=\"mb-1 mb-sm-0\">\n                      <ShreyuDatepicker\n                        selectsRange\n                        startDate={startDate}\n                        endDate={endDate}\n                        hideAddon={true}\n                        dateFormat={\"yyyy/MM/dd\"}\n                        onChange={(date) => {\n                          onDateChange(date);\n                        }}\n                      />\n                    </div>\n                  </Col>\n                  <Col md={\"auto\"}>\n                    <Dropdown as={ButtonGroup} align=\"end\">\n                      <Dropdown.Toggle\n                        variant=\"primary\"\n                        id=\"dropdown-basic\"\n                        className=\"cursor-pointer\"\n                      >\n                        <i className=\"uil uil-file-alt me-1\"></i>Download\n                        <i className=\"icon\">\n                          <FeatherIcon icon=\"chevron-down\" />\n                        </i>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item className=\"notify-item\" href=\"#/\">\n                          <FeatherIcon\n                            icon=\"mail\"\n                            className=\"icon-dual icon-xs me-2\"\n                          />\n                          <span>Email</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item className=\"notify-item\" href=\"#/\">\n                          <FeatherIcon\n                            icon=\"printer\"\n                            className=\"icon-dual icon-xs me-2\"\n                          />\n                          <span>Print</span>\n                        </Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item className=\"notify-item\" href=\"#/\">\n                          <FeatherIcon\n                            icon=\"file\"\n                            className=\"icon-dual icon-xs me-2\"\n                          />\n                          <span>Re-Generate</span>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Col>\n                </Row>\n              </form>\n            </div>\n          </div>\n        </Col>\n      </Row>\n\n      <Statistics />\n\n      <Row>\n        <Col xl={3}>\n          <OverView />\n        </Col>\n        <Col xl={6}>\n          <RevenueChart />\n        </Col>\n        <Col xl={3}>\n          <TargetChart />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={5}>\n          <SalesChart />\n        </Col>\n        <Col xl={7}>\n          <Orders orderDetails={orderDetails} />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={4}>\n          <MembersList title={\"Top Performers\"} members={topPerformers} />\n        </Col>\n        <Col xl={4}>\n          <Tasks tasks={tasks} />\n        </Col>\n        <Col xl={4}>\n          <ChatList title=\"Recent Conversation\" messages={chatMessages} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default EcommerceDashboard;\n"],"names":["_ref","className","style","children","otherProps","_objectWithoutProperties","_excluded","_jsx","SimpleBar","_objectSpread","defaultValues","resolver","onSubmit","formClass","methods","useForm","handleSubmit","register","control","errors","formState","noValidate","Array","isArray","map","child","props","name","React","type","key","TextualInput","placeholder","comp","rows","refCallback","_jsxs","_Fragment","Form","as","id","ref","r","isInvalid","CheckInput","_ref2","label","_excluded2","SelectInput","_ref3","_excluded3","FormInputGroup","_ref4","startIcon","textClassName","_excluded4","InputGroup","_ref5","labelClassName","containerClass","action","_excluded5","DatepickerInput","forwardRef","classNames","inputClass","onClick","value","onChange","console","log","DatepickerInputWithAddon","readOnly","input","hideAddon","DatePicker","calendarClassName","selectsRange","startDate","endDate","selected","date","customInput","timeIntervals","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","title","members","Card","item","index","src","avatar","alt","designation","Dropdown","align","tasks","Link","to","Scrollbar","maxHeight","htmlFor","dueDate","ChatItemAvatar","userAvatar","postedOn","ChatItemText","userName","text","chatItemDefaultProps","placement","PropTypes","ChatItem","odd","defaultProps","ChatForm","onNewMessagesPosted","schemaResolver","yupResolver","yup","shape","newMessage","required","reset","values","message","Row","Col","FormInput","_useState","useState","messages","_useState2","_slicedToArray","setMessages","width","i","userPic","concat","length","profilePic","Date","getHours","getMinutes","stats","trend","options","chart","sparkline","enabled","stroke","curve","markers","size","colors","tooltip","theme","fixed","x","show","y","formatter","seriesName","marker","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","Chart","series","data","height","textClass","icon","sm","xl","StatisticsChartWidget","iconClass","FeatherIcon","OverViewItem","now","apexBarChartOpts","toolbar","dataLabels","legend","xaxis","categories","month","year","days","idx","getMonth","d","push","getDate","toLocaleString","setDate","getDaysInMonth","getFullYear","axisBorder","labels","yaxis","val","dir","stacked","plotOptions","bar","horizontal","columnWidth","grid","row","opacity","borderColor","pie","donut","fontSize","fontFamily","fontWeight","color","undefined","offsetY","expandOnClick","position","horizontalAlign","itemMargin","vertical","responsive","breakpoint","orderDetails","scope","product","customer","price","status","topPerformers","avatar1","avatar2","avatar3","avatar4","avatar5","chatMessages","profilePic2","dateRange","setDateRange","_dateRange","md","ShreyuDatepicker","onDateChange","ButtonGroup","variant","href","Statistics","OverView","RevenueChart","TargetChart","SalesChart","Orders","MembersList","Tasks","ChatList"],"sourceRoot":""}