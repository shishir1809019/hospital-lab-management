{"version":3,"file":"static/js/66.e7eca2bc.chunk.js","mappings":"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","sources":["components/Scrollbar.tsx","components/MembersList.tsx","components/Tasks.tsx","components/ChatList.tsx","components/StatisticsChartWidget.tsx","pages/dashboard/Ecommerce/Statistics.tsx","components/OverViewItem.tsx","pages/dashboard/Ecommerce/OverView.tsx","pages/dashboard/Ecommerce/RevenueChart.tsx","pages/dashboard/Ecommerce/TargetChart.tsx","pages/dashboard/Ecommerce/SalesChart.tsx","pages/dashboard/Ecommerce/Orders.tsx","pages/dashboard/Ecommerce/data.ts","pages/dashboard/Ecommerce/index.tsx"],"sourcesContent":["import React from \"react\";\nimport SimpleBar from \"simplebar-react\";\n\ninterface ScrollbarProps extends SimpleBar.Props {\n  className?: string;\n  style?: any;\n  children?: any;\n}\n\nconst Scrollbar = ({\n  className,\n  style,\n  children,\n  ...otherProps\n}: ScrollbarProps) => {\n  return (\n    <SimpleBar className={className} style={style} {...otherProps}>\n      {children}\n    </SimpleBar>\n  );\n};\n\nexport default Scrollbar;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\n\nexport interface MembersTypes {\n  id: number;\n  name: string;\n  avatar: string;\n  designation: string;\n}\n\ninterface MembersListProps {\n  title: string;\n  members: MembersTypes[];\n}\n\nconst MembersList = ({ title, members }: MembersListProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <h6 className=\"header-title mb-3\">{title}</h6>\n\n        {(members || []).map((item, index) => {\n          return (\n            <div key={index} className=\"d-flex mt-1 border-top pt-2\">\n              <img src={item.avatar} className=\"avatar rounded me-3\" alt=\"\" />\n              <div className=\"flex-grow-1\">\n                <h5 className=\"mt-1 mb-0 fs-15\">{item.name}</h5>\n                <h6 className=\"text-muted fw-normal mt-1 mb-2\">\n                  {item.designation}\n                </h6>\n              </div>\n\n              <Dropdown className=\"align-self-center float-end\" align=\"end\">\n                <Dropdown.Toggle\n                  as=\"a\"\n                  className=\"cursor-pointer arrow-none text-muted\"\n                >\n                  <i className=\"uil uil-ellipsis-v\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item>\n                    <i className=\"uil uil-edit-alt me-2\"></i>Edit\n                  </Dropdown.Item>\n                  <Dropdown.Item>\n                    <i className=\"uil uil-exit me-2\"></i>Remove from Team\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item className=\"text-danger\">\n                    <i className=\"uil uil-trash me-2\"></i>Delete\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MembersList;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// components\nimport Scrollbar from \"./Scrollbar\";\n\nexport interface TaskItemTypes {\n  id: number;\n  title: string;\n  dueDate: string;\n}\n\ninterface TasksProps {\n  tasks: TaskItemTypes[];\n}\n\nconst Tasks = ({ tasks }: TasksProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Link to=\"#\" className=\"btn btn-primary btn-sm float-end\">\n          View All\n        </Link>\n        <h5 className=\"mb-4 header-title\">Tasks</h5>\n\n        <Scrollbar style={{ maxHeight: \"352px\" }} className=\"px-1\">\n          {(tasks || []).map((item, index) => {\n            return (\n              <div key={index} className=\"mt-2\">\n                <div className=\"form-check\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"task1\"\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"task1\">\n                    {item.title}\n                  </label>\n                  <p className=\"fs-13 text-muted\">Due on {item.dueDate}</p>\n                </div>\n              </div>\n            );\n          })}\n        </Scrollbar>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Tasks;\n","import React, { useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Card, Dropdown, Row, Col } from \"react-bootstrap\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n//components\nimport { FormInput } from \"../components/\";\nimport Scrollbar from \"../components/Scrollbar\";\n\n// images\nimport profilePic from \"../assets/images/users/avatar-1.jpg\";\n\n/* Chat Item Avatar */\nconst ChatItemAvatar = ({\n  userAvatar,\n  postedOn,\n}: {\n  userAvatar: string;\n  postedOn: string;\n}) => {\n  return (\n    <>\n      <div className=\"chat-avatar\">\n        <img src={userAvatar} alt={userAvatar} />\n        <i>{postedOn}</i>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item Text */\nconst ChatItemText = ({\n  userName,\n  text,\n}: {\n  userName: string;\n  text: string;\n}) => {\n  return (\n    <>\n      <div className=\"conversation-text\">\n        <div className=\"ctext-wrap\">\n          <i>{userName}</i>\n          <p>{text}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item */\nconst chatItemDefaultProps = {\n  placement: \"\",\n  children: PropTypes.object,\n  className: \"\",\n};\n\nconst ChatItem = ({\n  children,\n  placement,\n  className,\n}: {\n  children: any;\n  placement: string;\n  className: string;\n}) => {\n  return (\n    <li\n      className={classNames(\n        \"clearfix\",\n        { odd: placement === \"left\" },\n        className\n      )}\n    >\n      {children}\n    </li>\n  );\n};\n\nChatItem.defaultProps = chatItemDefaultProps;\n\n/**\n * ChatForm\n */\n\ninterface FormValues {\n  newMessage: string;\n}\n\n/**\n * Renders the ChatForm\n */\nconst ChatForm = ({\n  onNewMessagesPosted,\n}: {\n  onNewMessagesPosted: (message: string) => void;\n}) => {\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newMessage: yup.string().required(\"Please enter your messsage\"),\n    })\n  );\n\n  const methods = useForm<FormValues>({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * Handle valid form submission\n   */\n  const handleValidMessageSubmit: SubmitHandler<FormValues> = (values) => {\n    const message = values[\"newMessage\"];\n    onNewMessagesPosted(message);\n    reset();\n  };\n\n  return (\n    <>\n      <form\n        name=\"chat-form\"\n        id=\"chat-form\"\n        onSubmit={handleSubmit(handleValidMessageSubmit)}\n      >\n        <Row>\n          <Col>\n            <FormInput\n              type=\"text\"\n              name=\"newMessage\"\n              className=\"form-control chat-input\"\n              placeholder=\"Enter your text\"\n              register={register}\n              key=\"newMessage\"\n              errors={errors}\n              control={control}\n            />\n          </Col>\n          <Col className=\"col-auto\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger chat-send w-100 waves-effect waves-light\"\n            >\n              Send\n            </button>\n          </Col>\n        </Row>\n      </form>\n    </>\n  );\n};\n\n/**\n * ChatList\n */\nexport interface MessageItemTypes {\n  id: number;\n  userPic?: string;\n  userName: string;\n  text: string;\n  postedOn: string;\n}\n\ninterface ChatListProps {\n  title?: string;\n  className?: string;\n  messages: Array<MessageItemTypes>;\n}\n\n/**\n * Renders the ChatList\n */\nconst ChatList = (props: ChatListProps) => {\n  const [messages, setMessages] = useState<Array<MessageItemTypes>>(\n    props.messages\n  );\n\n  /**\n   * Handle new message posted\n   */\n  const handleNewMessagePosted = (message: string) => {\n    // save new message\n    setMessages(\n      messages.concat({\n        id: messages.length + 1,\n        userPic: profilePic,\n        userName: \"Dominic\",\n        text: message,\n        postedOn: new Date().getHours() + \":\" + new Date().getMinutes(),\n      })\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"cursor-pointer arrow-none text-muted\"\n            >\n              <i className=\"uil uil-ellipsis-v\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"uil uil-refresh me-2\"></i>Refresh\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"uil uil-user-plus me-2\"></i>Add New\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"text-danger\">\n                <i className=\"uil uil-exit me-2\"></i>Exit\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h4 className=\"header-title mb-4\">{props.title}</h4>\n\n          <div className=\"chat-conversation\">\n            {/* chat messages */}\n            <Scrollbar style={{ maxHeight: \"314px\", width: \"100%\" }}>\n              <ul className={classNames(\"conversation-list\", props.className)}>\n                {(messages || []).map((message, i) => {\n                  return (\n                    <ChatItem\n                      key={i}\n                      placement={\n                        message.userName === \"Dominic\" ? \"left\" : \"right\"\n                      }\n                    >\n                      {message.userPic && (\n                        <ChatItemAvatar\n                          userAvatar={message.userPic}\n                          postedOn={message.postedOn}\n                        />\n                      )}\n                      <ChatItemText\n                        userName={message.userName}\n                        text={message.text}\n                      />\n                    </ChatItem>\n                  );\n                })}\n              </ul>\n            </Scrollbar>\n\n            {/* chat form */}\n            <ChatForm onNewMessagesPosted={handleNewMessagePosted} />\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatList;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\nimport classNames from \"classnames\";\n\ninterface StatisticsChartWidgetProps {\n  title?: string;\n  stats?: string;\n  trend: {\n    textClass: string;\n    icon: string;\n    value: string;\n  };\n  colors?: Array<string>;\n}\n\nconst StatisticsChartWidget = ({\n  title,\n  stats,\n  trend,\n  colors,\n}: StatisticsChartWidgetProps) => {\n  //  default options\n  const options: ApexOptions = {\n    chart: {\n      type: \"area\",\n      sparkline: {\n        enabled: true,\n      },\n    },\n    stroke: {\n      width: 2,\n      curve: \"smooth\",\n    },\n    markers: {\n      size: 0,\n    },\n    colors: colors,\n    tooltip: {\n      theme: \"dark\",\n      fixed: {\n        enabled: false,\n      },\n      x: {\n        show: false,\n      },\n      y: {\n        title: {\n          formatter: (seriesName) => {\n            return \"\";\n          },\n        },\n      },\n      marker: {\n        show: false,\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"vertical\",\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [45, 100],\n      },\n    },\n  };\n\n  // chart data\n  const series = [\n    {\n      data: [25, 66, 41, 85, 63, 25, 44, 12, 36, 9, 54],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"d-flex\">\n          <div className=\"flex-grow-1\">\n            <span className=\"text-muted text-uppercase fs-12 fw-bold\">\n              {title}\n            </span>\n            <h3 className=\"mb-0\">{stats}</h3>\n          </div>\n          <div className=\"align-self-center flex-shrink-0\">\n            <Chart\n              className=\"apex-charts\"\n              options={options}\n              series={series}\n              type=\"area\"\n              height={45}\n              width={80}\n            />\n            <span className={classNames(\"fw-bold\", \"fs-13\", trend.textClass)}>\n              <i className={trend.icon}></i> {trend.value}\n            </span>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StatisticsChartWidget;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport StatisticsChartWidget from \"../../../components/StatisticsChartWidget\";\n\nconst Statistics = () => {\n  return (\n    <div>\n      <Row>\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"Today Revenue\"\n            stats=\"$2100\"\n            trend={{\n              textClass: \"text-success\",\n              icon: \"uil uil-arrow-up\",\n              value: \"10.21%\",\n            }}\n            colors={[\"#727cf5\"]}\n          />\n        </Col>\n\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"Product Sold\"\n            stats=\"558\"\n            trend={{\n              textClass: \"text-danger\",\n              icon: \"uil uil-arrow-down\",\n              value: \"5.05%\",\n            }}\n            colors={[\"#f77e53\"]}\n          />\n        </Col>\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"New Customers\"\n            stats=\"65\"\n            trend={{\n              textClass: \"text-success\",\n              icon: \"uil uil-arrow-up\",\n              value: \"21.16%\",\n            }}\n            colors={[\"#43d39e\"]}\n          />\n        </Col>\n\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"New Visitors\"\n            stats=\"958\"\n            trend={{\n              textClass: \"text-danger\",\n              icon: \"uil uil-arrow-down\",\n              value: \"5.05%\",\n            }}\n            colors={[\"#ffbe0b\"]}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport FeatherIcon from \"feather-icons-react\";\nimport classNames from \"classnames\";\n\ninterface OverViewItemProps {\n  stats: string;\n  title: string;\n  icon: string;\n  iconClass?: string;\n}\n\nconst OverViewItem = ({ stats, title, icon, iconClass }: OverViewItemProps) => {\n  return (\n    <div className=\"d-flex p-3 border-bottom\">\n      <div className=\"flex-grow-1\">\n        <h4 className=\"mt-0 mb-1 fs-22\">{stats}</h4>\n        <span className=\"text-muted\">{title}</span>\n      </div>\n      <FeatherIcon\n        icon={icon}\n        className={classNames(\"align-self-center\", \"icon-dual\", iconClass)}\n      />\n    </div>\n  );\n};\n\nexport default OverViewItem;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Dropdown } from \"react-bootstrap\";\n\n// components\nimport OverViewItem from \"../../../components/OverViewItem\";\n\nconst OverView = () => {\n  return (\n    <Card>\n      <Card.Body className=\"p-0\">\n        <div className=\"p-3\">\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"arrow-none text-muted cursor-pointer\"\n            >\n              <i className=\"uil uil-ellipsis-v\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"uil uil-refresh me-2\"></i>Refresh\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"uil uil-user-plus me-2\"></i>Add New\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"text-danger\">\n                <i className=\"uil uil-exit me-2\"></i>Exit\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <h5 className=\"card-title header-title mb-0\">Overview</h5>\n        </div>\n\n        <OverViewItem\n          stats={\"121,000\"}\n          title={\"Total Visitors\"}\n          icon={\"users\"}\n          iconClass={\"icon-md\"}\n        />\n        <OverViewItem\n          stats={\"21,000\"}\n          title={\"Total Product Views\"}\n          icon={\"image\"}\n          iconClass={\"icon-md\"}\n        />\n        <OverViewItem\n          stats={\"$21.5\"}\n          title={\"Revenue Per Visitor\"}\n          icon={\"shopping-bag\"}\n          iconClass={\"icon-md\"}\n        />\n\n        <Link to=\"#\" className=\"p-2 d-block text-end\">\n          View All <i className=\"uil-arrow-right\"></i>\n        </Link>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default OverView;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\nconst RevenueChart = () => {\n  function getDaysInMonth(month: any, year: any) {\n    var date = new Date(year, month, 1);\n    var days = [];\n    var idx = 0;\n    while (date.getMonth() === month && idx < 15) {\n      var d = new Date(date);\n      days.push(\n        d.getDate() + \" \" + d.toLocaleString(\"en-us\", { month: \"short\" })\n      );\n      date.setDate(date.getDate() + 1);\n      idx += 1;\n    }\n    return days;\n  }\n\n  const now = new Date();\n  const labels = getDaysInMonth(now.getMonth(), now.getFullYear());\n\n  const apexBarChartOpts: ApexOptions = {\n    chart: {\n      height: 329,\n      type: \"area\",\n      toolbar: {\n        show: false,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    tooltip: {\n      theme: \"dark\",\n      x: {\n        show: false,\n      },\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 4,\n    },\n    series: [\n      {\n        name: \"Revenue\",\n        data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35],\n      },\n    ],\n    legend: {\n      show: false,\n    },\n    colors: [\"#43d39e\"],\n    xaxis: {\n      type: \"category\",\n      categories: labels,\n      tooltip: {\n        enabled: false,\n      },\n      axisBorder: {\n        show: false,\n      },\n      labels: {},\n    },\n    yaxis: {\n      labels: {\n        formatter: (val: number) => {\n          return val + \"k\";\n        },\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"vertical\",\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [45, 100],\n      },\n    },\n  };\n\n  const apexBarChartData = [\n    {\n      name: \"Revenue\",\n      data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle\n            as=\"a\"\n            className=\"arrow-none text-muted cursor-pointer\"\n          >\n            <i className=\"uil uil-ellipsis-v\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Today</Dropdown.Item>\n            <Dropdown.Item>7 Days</Dropdown.Item>\n            <Dropdown.Item>15 Days</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item>1 Months</Dropdown.Item>\n            <Dropdown.Item>6 Months</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item>1 Year</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h5 className=\"card-title mb-0 header-title\">Revenue</h5>\n\n        <Chart\n          options={apexBarChartOpts}\n          series={apexBarChartData}\n          type=\"area\"\n          className=\"apex-charts mt-3\"\n          height={329}\n          dir=\"ltr\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RevenueChart;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\nconst TargetChart = () => {\n  const apexBarChartOpts: ApexOptions = {\n    chart: {\n      height: 349,\n      type: \"bar\",\n      stacked: true,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"45%\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: [\"transparent\"],\n    },\n    xaxis: {\n      categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n      axisBorder: {\n        show: false,\n      },\n    },\n    legend: {\n      show: false,\n    },\n    grid: {\n      row: {\n        colors: [\"transparent\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.2,\n      },\n      borderColor: \"#f3f4f7\",\n    },\n    tooltip: {\n      theme: \"dark\",\n      x: {\n        show: false,\n      },\n      y: {\n        formatter: function (val) {\n          return \"$ \" + val + \" thousands\";\n        },\n      },\n    },\n  };\n\n  const apexBarChartData = [\n    {\n      name: \"Net Profit\",\n      data: [35, 44, 55, 57, 56, 61],\n    },\n    {\n      name: \"Revenue\",\n      data: [52, 76, 85, 101, 98, 87],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body className=\"pb-0\">\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle\n            as=\"a\"\n            className=\"cursor-pointer arrow-none text-muted\"\n          >\n            <i className=\"uil uil-ellipsis-v\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>\n              <i className=\"uil uil-refresh me-2\"></i>Refresh\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <i className=\"uil uil-user-plus me-2\"></i>Add New\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item className=\"text-danger\">\n              <i className=\"uil uil-exit me-2\"></i>Exit\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h5 className=\"card-title header-title\">Targets</h5>\n\n        <Chart\n          options={apexBarChartOpts}\n          series={apexBarChartData}\n          type=\"bar\"\n          className=\"apex-charts mt-3\"\n          height={349}\n          dir=\"ltr\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TargetChart;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\nconst SalesChart = () => {\n  const apexBarChartOpts: ApexOptions = {\n    plotOptions: {\n      pie: {\n        donut: {\n          size: \"70%\",\n          labels: {\n            show: false,\n            name: {\n              show: true,\n              fontSize: \"22px\",\n              fontFamily: \"Helvetica, Arial, sans-serif\",\n              fontWeight: 600,\n              color: undefined,\n              offsetY: -10,\n              formatter: function (val) {\n                return val;\n              },\n            },\n          },\n        },\n        expandOnClick: false,\n      },\n    },\n    chart: {\n      height: 291,\n      type: \"donut\",\n    },\n    legend: {\n      show: true,\n      position: \"right\",\n      horizontalAlign: \"left\",\n      itemMargin: {\n        horizontal: 6,\n        vertical: 3,\n      },\n    },\n    labels: [\"Clothes 44k\", \"Smartphons 55k\", \"Electronics 41k\", \"Other 17k\"],\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n    tooltip: {\n      y: {\n        formatter: (value: number) => {\n          return value + \"k\";\n        },\n      },\n    },\n  };\n\n  const apexBarChartData = [44, 55, 41, 17];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle\n            as=\"a\"\n            className=\"arrow-none text-muted cursor-pointer\"\n          >\n            <i className=\"uil uil-ellipsis-v\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>\n              <i className=\"uil uil-refresh me-2\"></i>Refresh\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <i className=\"uil uil-user-plus me-2\"></i>Add New\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item className=\"text-danger\">\n              <i className=\"uil uil-exit me-2\"></i>Exit\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h5 className=\"card-title mt-0 mb-0 header-title\">Sales By Category</h5>\n\n        <Chart\n          options={apexBarChartOpts}\n          series={apexBarChartData}\n          type=\"donut\"\n          className=\"apex-charts mb-0 mt-4\"\n          height={291}\n          dir=\"ltr\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SalesChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// types\nimport { OrdersItemTypes } from \"./data\";\n\ninterface OrdersProps {\n  orderDetails: OrdersItemTypes[];\n}\n\nconst Orders = ({ orderDetails }: OrdersProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Link to=\"#\" className=\"btn btn-primary btn-sm float-end\">\n          <i className=\"uil uil-export me-1\"></i> Export\n        </Link>\n        <h5 className=\"card-title mt-0 mb-0 header-title\">Recent Orders</h5>\n\n        <div className=\"table-responsive mt-4\">\n          <table className=\"table table-hover table-nowrap mb-0\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Product</th>\n                <th scope=\"col\">Customer</th>\n                <th scope=\"col\">Price</th>\n                <th scope=\"col\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {(orderDetails || []).map((item, index) => {\n                return (\n                  <tr key={index}>\n                    <td>#{item.id}</td>\n                    <td>{item.product}</td>\n                    <td>{item.customer}</td>\n                    <td>{item.price}</td>\n                    <td>\n                      <span\n                        className={classNames(\"badge\", \"py-1\", {\n                          \"badge-soft-warning\": item.status === \"Pending\",\n                          \"badge-soft-success\": item.status === \"Delivered\",\n                          \"badge-soft-danger\": item.status === \"Declined\",\n                        })}\n                      >\n                        {item.status}\n                      </span>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Orders;\n","// images\nimport avatar1 from \"../../../assets/images/users/avatar-7.jpg\";\nimport avatar2 from \"../../../assets/images/users/avatar-9.jpg\";\nimport avatar3 from \"../../../assets/images/users/avatar-4.jpg\";\nimport avatar4 from \"../../../assets/images/users/avatar-1.jpg\";\nimport avatar5 from \"../../../assets/images/users/avatar-8.jpg\";\nimport profilePic2 from \"../../../assets/images/users/avatar-5.jpg\";\n\n// types\nimport { MembersTypes } from \"../../../components/MembersList\";\nimport { TaskItemTypes } from \"../../../components/Tasks\";\nimport { MessageItemTypes } from \"../../../components/ChatList\";\n\nexport interface OrdersItemTypes {\n  id: number;\n  product: string;\n  customer: string;\n  price: string;\n  status: string;\n}\n\nconst orderDetails: OrdersItemTypes[] = [\n  {\n    id: 98754,\n    product: \"ASOS Ridley High\",\n    customer: \"Otto B\",\n    price: \"$79.49\",\n    status: \"Pending\",\n  },\n  {\n    id: 98753,\n    product: \"Marco Lightweight Shirt\",\n    customer: \"Mark P\",\n    price: \"$125.49\",\n    status: \"Delivered\",\n  },\n  {\n    id: 98752,\n    product: \"Half Sleeve Shirt\",\n    customer: \"Dave B\",\n    price: \"$35.49\",\n    status: \"Declined\",\n  },\n  {\n    id: 98751,\n    product: \"Lightweight Jacket\",\n    customer: \"Shreyu N\",\n    price: \"$49.49\",\n    status: \"Delivered\",\n  },\n  {\n    id: 98750,\n    product: \"Marco Shoes\",\n    customer: \"Rik N\",\n    price: \"$69.49\",\n    status: \"Declined\",\n  },\n];\n\nconst topPerformers: MembersTypes[] = [\n  {\n    id: 1,\n    name: \"Shreyu N\",\n    avatar: avatar1,\n    designation: \"Senior Sales Guy\",\n  },\n  {\n    id: 2,\n    name: \"Greeva Y\",\n    avatar: avatar2,\n    designation: \"Social Media Campaign\",\n  },\n  {\n    id: 3,\n    name: \"Nik G\",\n    avatar: avatar3,\n    designation: \"Inventory Manager\",\n  },\n  {\n    id: 4,\n    name: \"Hardik G\",\n    avatar: avatar4,\n    designation: \"Sales Person\",\n  },\n  {\n    id: 5,\n    name: \"GB Patel G\",\n    avatar: avatar5,\n    designation: \"Sales Person\",\n  },\n];\n\nconst tasks: TaskItemTypes[] = [\n  {\n    id: 1,\n    title: \"Draft the new contract document for sales team\",\n    dueDate: \"24 Aug, 2019\",\n  },\n  {\n    id: 2,\n    title: \"iOS App home page\",\n    dueDate: \"23 Aug, 2019\",\n  },\n  {\n    id: 3,\n    title: \"Write a release note for Shreyu\",\n    dueDate: \"22 Aug, 2019\",\n  },\n  {\n    id: 4,\n    title: \"Invite Greeva to a project shreyu admin\",\n    dueDate: \"21 Aug, 2019\",\n  },\n  {\n    id: 5,\n    title: \"Enable analytics tracking for main website\",\n    dueDate: \"20 Aug, 2019\",\n  },\n  {\n    id: 6,\n    title: \"Invite user to a project\",\n    dueDate: \"18 Aug, 2019\",\n  },\n  {\n    id: 7,\n    title: \"Write a release note\",\n    dueDate: \"18 Aug, 2019\",\n  },\n];\nconst chatMessages: MessageItemTypes[] = [\n  {\n    id: 1,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Hello!\",\n    postedOn: \"10:00\",\n  },\n  {\n    id: 2,\n    userPic: avatar4,\n    userName: \"Dominic\",\n    text: \"Hi, How are you? What about our next meeting?\",\n    postedOn: \"10:01\",\n  },\n  {\n    id: 3,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Yeah everything is fine\",\n    postedOn: \"10:02\",\n  },\n  {\n    id: 4,\n    userPic: avatar4,\n    userName: \"Dominic\",\n    text: \"Wow that's great!\",\n    postedOn: \"10:03\",\n  },\n  {\n    id: 5,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Cool!\",\n    postedOn: \"10:03\",\n  },\n];\n\nexport { orderDetails, topPerformers, tasks, chatMessages };\n","import React, { useState } from \"react\";\nimport { Row, Col, Dropdown, ButtonGroup } from \"react-bootstrap\";\nimport FeatherIcon from \"feather-icons-react\";\n\n// components\nimport ShreyuDatepicker from \"../../../components/Datepicker\";\nimport MembersList from \"../../../components/MembersList\";\nimport Tasks from \"../../../components/Tasks\";\nimport ChatList from \"../../../components/ChatList\";\n\nimport Statistics from \"./Statistics\";\nimport OverView from \"./OverView\";\nimport RevenueChart from \"./RevenueChart\";\nimport TargetChart from \"./TargetChart\";\nimport SalesChart from \"./SalesChart\";\nimport Orders from \"./Orders\";\n\n// dummy data\nimport { orderDetails, topPerformers, tasks, chatMessages } from \"./data\";\n\nconst EcommerceDashboard = () => {\n  const [dateRange, setDateRange] = useState<any>([\n    new Date(),\n    new Date().setDate(new Date().getDate() + 7),\n  ]);\n  const [startDate, endDate] = dateRange;\n\n  /*\n   * handle date change\n   */\n  const onDateChange = (date: Date) => {\n    if (date) {\n      setDateRange(date);\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Dashboard</h4>\n            <div className=\"page-title-right\">\n              <form className=\"float-md-end mt-3 mt-md-0\">\n                <Row className=\"g-2\">\n                  <Col md={\"auto\"}>\n                    <div className=\"mb-1 mb-sm-0\">\n                      <ShreyuDatepicker\n                        selectsRange\n                        startDate={startDate}\n                        endDate={endDate}\n                        hideAddon={true}\n                        dateFormat={\"yyyy/MM/dd\"}\n                        onChange={(date) => {\n                          onDateChange(date);\n                        }}\n                      />\n                    </div>\n                  </Col>\n                  <Col md={\"auto\"}>\n                    <Dropdown as={ButtonGroup} align=\"end\">\n                      <Dropdown.Toggle\n                        variant=\"primary\"\n                        id=\"dropdown-basic\"\n                        className=\"cursor-pointer\"\n                      >\n                        <i className=\"uil uil-file-alt me-1\"></i>Download\n                        <i className=\"icon\">\n                          <FeatherIcon icon=\"chevron-down\" />\n                        </i>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item className=\"notify-item\" href=\"#/\">\n                          <FeatherIcon\n                            icon=\"mail\"\n                            className=\"icon-dual icon-xs me-2\"\n                          />\n                          <span>Email</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item className=\"notify-item\" href=\"#/\">\n                          <FeatherIcon\n                            icon=\"printer\"\n                            className=\"icon-dual icon-xs me-2\"\n                          />\n                          <span>Print</span>\n                        </Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item className=\"notify-item\" href=\"#/\">\n                          <FeatherIcon\n                            icon=\"file\"\n                            className=\"icon-dual icon-xs me-2\"\n                          />\n                          <span>Re-Generate</span>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Col>\n                </Row>\n              </form>\n            </div>\n          </div>\n        </Col>\n      </Row>\n\n      <Statistics />\n\n      <Row>\n        <Col xl={3}>\n          <OverView />\n        </Col>\n        <Col xl={6}>\n          <RevenueChart />\n        </Col>\n        <Col xl={3}>\n          <TargetChart />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={5}>\n          <SalesChart />\n        </Col>\n        <Col xl={7}>\n          <Orders orderDetails={orderDetails} />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={4}>\n          <MembersList title={\"Top Performers\"} members={topPerformers} />\n        </Col>\n        <Col xl={4}>\n          <Tasks tasks={tasks} />\n        </Col>\n        <Col xl={4}>\n          <ChatList title=\"Recent Conversation\" messages={chatMessages} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default EcommerceDashboard;\n"],"names":["_ref","className","style","children","otherProps","_objectWithoutProperties","_excluded","_jsx","SimpleBar","_objectSpread","title","members","Card","_jsxs","map","item","index","src","avatar","alt","name","designation","Dropdown","align","as","tasks","Link","to","Scrollbar","maxHeight","type","id","htmlFor","dueDate","ChatItemAvatar","userAvatar","postedOn","_Fragment","ChatItemText","_ref2","userName","text","chatItemDefaultProps","placement","PropTypes","ChatItem","_ref3","classNames","odd","defaultProps","ChatForm","_ref4","onNewMessagesPosted","schemaResolver","yupResolver","yup","shape","newMessage","required","methods","useForm","resolver","handleSubmit","register","control","errors","formState","reset","onSubmit","values","message","Row","Col","FormInput","placeholder","props","_useState","useState","messages","_useState2","_slicedToArray","setMessages","width","i","userPic","concat","length","profilePic","Date","getHours","getMinutes","stats","trend","options","chart","sparkline","enabled","stroke","curve","markers","size","colors","tooltip","theme","fixed","x","show","y","formatter","seriesName","marker","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","Chart","series","data","height","textClass","icon","value","sm","xl","StatisticsChartWidget","iconClass","FeatherIcon","OverViewItem","now","apexBarChartOpts","toolbar","dataLabels","legend","xaxis","categories","month","year","date","days","idx","getMonth","d","push","getDate","toLocaleString","setDate","getDaysInMonth","getFullYear","axisBorder","labels","yaxis","val","dir","stacked","plotOptions","bar","horizontal","columnWidth","grid","row","opacity","borderColor","pie","donut","fontSize","fontFamily","fontWeight","color","undefined","offsetY","expandOnClick","position","horizontalAlign","itemMargin","vertical","responsive","breakpoint","orderDetails","scope","product","customer","price","status","topPerformers","avatar1","avatar2","avatar3","avatar4","avatar5","chatMessages","profilePic2","dateRange","setDateRange","_dateRange","startDate","endDate","md","ShreyuDatepicker","selectsRange","hideAddon","dateFormat","onChange","onDateChange","ButtonGroup","variant","href","Statistics","OverView","RevenueChart","TargetChart","SalesChart","Orders","MembersList","Tasks","ChatList"],"sourceRoot":""}