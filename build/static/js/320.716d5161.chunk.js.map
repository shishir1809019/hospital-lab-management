{"version":3,"file":"static/js/320.716d5161.chunk.js","mappings":"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","sources":["pages/apps/antibiotics/data.tsx","pages/apps/antibiotics/index.tsx","../node_modules/react-bootstrap/esm/ButtonGroup.js"],"sourcesContent":["const generateRecords = () => {\n  const records = [];\n  const baseNames = [\n    \"Amoxicilline\",\n    \"Antibiotics\",\n    \"ofloxacin\",\n    \"corona\",\n    \"PENCLINE\",\n    \"Medicament\",\n    \"Ciprofloxacin\",\n    \"Azithromycin\",\n    \"Metformin\",\n    \"Aspirin\",\n  ];\n\n  for (let i = 1; i <= 50; i++) {\n    const baseIndex = i % baseNames.length; // Cycle through the array of base names\n    const name = baseNames[baseIndex];\n    const shortcut = name.substring(0, 3).toUpperCase();\n    const commercialName = name;\n\n    records.push({\n      id: i,\n      name: name,\n      shortcut: shortcut,\n      commercialName: commercialName + (i % 2 === 0 ? \" Extra\" : \"\"), // Append 'Extra' on every second record\n      action: \"View Details\", // Placeholder for action items\n    });\n  }\n  return records;\n};\n\nconst records = generateRecords();\n\nexport default records;\n","import React from \"react\";\n\n// components\nimport { Row, Col, Dropdown, Card, Button, ButtonGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport PageTitle from \"../../../components/PageTitle\";\nimport Table from \"../../../components/Table\";\nimport records from \"./data\";\n\nconst columns = [\n  {\n    Header: \"Name\",\n    accessor: \"name\",\n    sort: true,\n  },\n  {\n    Header: \"Shortcut\",\n    accessor: \"shortcut\",\n    sort: true,\n  },\n  {\n    Header: \"Commercial Name\",\n    accessor: \"commercialName\",\n    sort: true,\n  },\n  {\n    Header: \"Action\",\n    accessor: \"action\",\n    Cell: ({ row }: any) => (\n      <Dropdown as={ButtonGroup} className=\"mt-2 me-1\" align=\"end\">\n        <Dropdown.Toggle variant=\"primary\" className=\"cursor-pointer\">\n          <i className=\"bi bi-gear\"></i>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item href=\"#\">\n            <i className=\"bi bi-pencil-square\"></i> Edit\n          </Dropdown.Item>\n\n          <Dropdown.Item href=\"#\">\n            <i className=\"bi bi-trash-fill\"></i> Delete\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    ),\n    disableSortBy: true, // Actions columns are not sortable\n  },\n];\n\nconst sizePerPageList = [\n  {\n    text: \"5\",\n    value: 5,\n  },\n  {\n    text: \"10\",\n    value: 10,\n  },\n  {\n    text: \"25\",\n    value: 25,\n  },\n  {\n    text: \"All\",\n    value: records.length,\n  },\n];\n\nconst Antibiotics = () => {\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Branches\", path: \"/apps/calendar\" },\n          { label: \"Branches\", path: \"/apps/calendar\", active: true },\n        ]}\n        title={\"Branches\"}\n      />\n\n      <Card>\n        <Card.Body>\n          <Col className=\"text-sm-end mt-sm-0 mt-2\">\n            <Link to=\"add\" className=\"btn btn-primary btn-md float-end\">\n              <i className=\"uil-plus me-1\"></i>Add New\n            </Link>\n          </Col>\n\n          <Table\n            columns={columns}\n            data={records}\n            pageSize={5}\n            sizePerPageList={sizePerPageList}\n            isSortable={true}\n            pagination={true}\n            isSearchable={true}\n          />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default Antibiotics;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;"],"names":["records","baseNames","i","name","length","shortcut","substring","toUpperCase","commercialName","push","id","action","generateRecords","columns","Header","accessor","sort","Cell","_ref","row","_jsxs","Dropdown","as","ButtonGroup","className","align","children","_jsx","variant","href","disableSortBy","sizePerPageList","text","value","_Fragment","PageTitle","breadCrumbItems","label","path","active","title","Card","Col","Link","to","Table","data","pageSize","isSortable","pagination","isSearchable","React","ref","bsPrefix","size","vertical","_ref$as","Component","rest","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","baseClass","concat","_objectSpread","classNames","displayName","defaultProps","role"],"sourceRoot":""}